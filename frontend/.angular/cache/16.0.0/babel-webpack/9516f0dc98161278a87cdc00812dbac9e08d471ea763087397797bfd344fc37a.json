{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nvar JWTS_LOCAL_KEY = 'JWTS_LOCAL_KEY';\nvar JWTS_ACTIVE_INDEX_KEY = 'JWTS_ACTIVE_INDEX_KEY';\nexport var AuthService = /** @class */function () {\n  function AuthService() {\n    this.url = environment.auth0.url;\n    this.audience = environment.auth0.audience;\n    this.clientId = environment.auth0.clientId;\n    this.callbackURL = environment.auth0.callbackURL;\n  }\n  AuthService.prototype.build_login_link = function (callbackPath) {\n    if (callbackPath === void 0) {\n      callbackPath = '';\n    }\n    var link = 'https://';\n    link += this.url + '.auth0.com';\n    link += '/authorize?';\n    link += 'audience=' + this.audience + '&';\n    link += 'response_type=token&';\n    link += 'client_id=' + this.clientId + '&';\n    link += 'redirect_uri=' + this.callbackURL + callbackPath;\n    return link;\n  };\n  // invoked in app.component on load\n  AuthService.prototype.check_token_fragment = function () {\n    // parse the fragment\n    var fragment = window.location.hash.substr(1).split('&')[0].split('=');\n    // check if the fragment includes the access token\n    if (fragment[0] === 'access_token') {\n      // add the access token to the jwt\n      this.token = fragment[1];\n      // save jwts to localstore\n      this.set_jwt();\n    }\n  };\n  AuthService.prototype.set_jwt = function () {\n    localStorage.setItem(JWTS_LOCAL_KEY, this.token);\n    if (this.token) {\n      this.decodeJWT(this.token);\n    }\n  };\n  AuthService.prototype.load_jwts = function () {\n    this.token = localStorage.getItem(JWTS_LOCAL_KEY) || null;\n    if (this.token) {\n      this.decodeJWT(this.token);\n    }\n  };\n  AuthService.prototype.activeJWT = function () {\n    return this.token;\n  };\n  AuthService.prototype.decodeJWT = function (token) {\n    var jwtservice = new JwtHelperService();\n    this.payload = jwtservice.decodeToken(token);\n    return this.payload;\n  };\n  AuthService.prototype.logout = function () {\n    this.token = '';\n    this.payload = null;\n    this.set_jwt();\n  };\n  AuthService.prototype.can = function (permission) {\n    return this.payload && this.payload.permissions && this.payload.permissions.length && this.payload.permissions.indexOf(permission) >= 0;\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}